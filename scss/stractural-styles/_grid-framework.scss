@mixin make-container() {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  overflow-x: hidden;
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 768px, md: 992px, lg: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@mixin make-col($i,$columns){
  width: percentage($i/$columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

@mixin media-breakpoint-up($value){
  $min:if($value!=0,$value,null);

  @if($min){
    @media (min-width:$min){
      .container{
        width:$min;
      }
      @content;
    }
  }@else{
    /* 没有任何媒体查询相关的代码，因为这在 Bootstrap 中是默认的（还记得 Bootstrap 是移动设备优先的吗？） */
    @content;
  }
}

@mixin make-grid-columns($columns:$grid-columns,$breakpoints:$grid-breakpoints){
  %grid-col{
    position:relative;
    min-height:1px;
    float:left;
  }
  @each $key,$value in $breakpoints{
    //@debug $key,$value;

    //制作列公有的属性
    @for $i from 1 through $columns{
      .col-#{$key}-#{$i}{
        @extend %grid-col;
      }
    }

    @include media-breakpoint-up($value){

      //制作列
      @for $i from 1 through $columns{
        .col-#{$key}-#{$i}{
          @include make-col($i,$columns);
        }
      }

      //制作列偏移量。（“列- 1”,因为抵消整个宽度的行是不可能的）
      @for $i from 0 through ($columns - 1){
        .offset-#{$key}-#{$i}{
          @include make-col-offset($i,$columns);
        }
      }
    }
  }
}

.container {
  @include make-container;
}
@include make-grid-columns();
