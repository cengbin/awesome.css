@mixin calc-grid-columns($index,$class,$type){
  @if ($type == width) and ($index > 0){
    .col-#{$class}-#{$index}{
      width:percentage($index/$grid-columns);
    }
  }
  @if ($type == offset) and ($index > 0){
    .col-#{$class}-offset-#{$index}{
      $num: $index / $grid-columns;
      margin-left: if($num == 0, 0, percentage($num));
    }
  }
}

//through 表示包括 end 这个数，而 to 则不包括 end 这个数。
@mixin loop-grid-columns($columns,$class,$type){
  @for $i from 1 through $columns{
    @include calc-grid-columns($i,$class,$type);
  }
}

@mixin float-grid-columns($class){
  $i:1;
  $list: ".col-#{$class}-#{$i}";//默认第一列类名

  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$class}-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin make-grid($class){
  //制作浮动
  @include float-grid-columns($class);

  //制作宽
  @include loop-grid-columns($grid-columns,$class,width);

  //制作列偏移量。（“列- 1”,因为抵消整个宽度的行是不可能的）
  @include loop-grid-columns($grid-columns - 1,$class,offset);
}